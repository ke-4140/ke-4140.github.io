{"version":3,"sources":["features/counter/Counter.module.css","components/Header.js","components/Button.js","components/Card.js","features/systemSlice.js","features/uploader/Uploader.js","App.js","features/counter/counterSlice.js","app/store.js","features/editor/Timeline.js","features/preview/PDFTemplate.js","serviceWorker.js","index.js","features/counter/Counter.js","features/editor/Editor.js","features/preview/Preview.js","features/export/Export.js"],"names":["module","exports","Header","className","to","class","Button","onClick","label","iconBefore","iconAfter","width","height","type","style","Card","onPress","flexDirection","children","justifyContent","systemSlice","createSlice","name","initialState","logo","extractionDetails","pdfTotalPages","youtubeURL","frames","keyframes","totalVideoTime","frameScriptTuple","owner","jobIsCompleted","extractionProgress","loadedFramesNum","reducers","setYoutubeURL","state","action","payload","setOwner","setFrames","setFrameScriptTuple","setPdfTotalPages","setContents","contents","addKeyframes","concat","appendKeyFrame","vid_time","index","img_addr","imgAddr","userCreated","completesJob","setExtractionProgress","addLoadedFramesNum","setTotalVideoTime","setExtractionDetails","setKeyFrames","toggleKeyframeFromFrame","map","frame","i","isKey","status","actions","fetchKeyFrames","start","dispatch","getState","console","log","newFrames","system","keyframe","isExtracted","initializeFrames","numOfFrames","seconds","testFrames","Array","from","length","v","k","id","fetchNewKeyFrame","frameNum","parseInt","axios","get","params","src","frame_no","then","res","data","catch","err","filter","compare","a","b","setLoadedFramesNum","selectJobIsCompleted","selectExtractionProgress","selectYoutubeURL","selectFrames","selectContents","Uploader","useDispatch","useState","link","setLink","history","useHistory","submit","post","push","postYoutubeSrc","value","onChange","e","target","App","display","alignItems","counterSlice","increment","decrement","incrementByAmount","selectCount","counter","configureStore","reducer","counterReducer","systemReducer","Timeline","player","seekTo","playAt","hoverPreview","useSelector","statusText","setStatusText","progress","setProgress","toggleKeyFrame","helperText","secondsToMinutes","s","m","Math","floor","useEffect","interval","setInterval","getCurrentTime","clearInterval","dataLength","next","hasMore","slice","onH","backgroundColor","flex","onDoubleClick","img","skipToKeyFrame","viewKeyFrame","PDFTemplate","transcript","title","enableTranscript","KFA","padding","Date","toJSON","replace","marginTop","marginBottom","border","weight","content","rows","defaultValue","resize","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","exact","path","component","count","incrementAmount","setIncrementAmount","styles","row","button","aria-label","textbox","Number","asyncButton","amount","setTimeout","playerObj","setPlayerObj","intervalID","setIntervalID","setSeconds","isLoading","setIsLoading","previewAddr","setPreviewAddr","intervalId","uuid","attributesJSON","JSON","parse","job","attributes","outputs","round","marginRight","marginInline","marginLeft","videoId","split","opts","playerVars","autoplay","onReady","getDuration","playVideo","onStateChange","second","pauseVideo","setTitle","switchEnableTranscript","enableKFA","switchEnableKFA","n","sort","TestFrameScriptTuple","reduce","key","checked","for","document","getElementById","overflow","print","overflowY","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4486db08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import {\n//   decrement,\n//   increment,\n//   incrementByAmount,\n//   incrementAsync,\n//   selectCount,\n// } from './counterSlice';\nimport styles from './Header.css';\n\nexport function Header() {\n  return (\n    <header>\n      <div className=\"topNavBar\">\n        <div><Link className=\"logo\" to=\"/\">KE</Link></div>\n        <div>\n          {/* <Link className=\"tabItem\" to=\"/\">Home</Link>\n          <Link className=\"tabItem\" to=\"/uploader\">Upload</Link>\n          <Link className=\"tabItem\" to=\"/editor\">Editor</Link>\n          <Link className=\"tabItem\" to=\"/preview\">Preview</Link>\n          <Link className=\"tabItem\" to=\"/download\">Download</Link> */}\n        </div>\n        \n      </div>\n      <hr className=\"divider\" class=\"solid\"></hr>\n    </header>\n  );\n}\n\n\n","import React, { useState } from 'react';\nimport styles from './Button.css';\n//todo: disable state color schemes s\nexport function Button({\n  onClick,\n  iconBefore, //icon before label\n  label, //text \n  iconAfter, //icon after label\n  width = '150px',\n  height= '25px' // (large, medium, small) \n}) {\n  return (\n    <div type=\"button\" className=\"button\" style={{width: width, height: height}} onClick={onClick}>\n      <span className=\"label\">{label}</span>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport styles from './Card.css';\n//todo: disable state color schemes s\nexport function Card({\n  onPress,\n  iconBefore, //icon before label\n  label, //text \n  iconAfter, //icon after label\n  width = '250px',\n  height = '300px',\n  flexDirection = 'row', // (large, medium, small)\n  children\n}) {\n  return (\n    <div type=\"card\" className=\"card\" style={{ width: width, height: height, flexDirection: flexDirection, justifyContent: 'space-around' }} onClick={onPress}>\n      {children}\n    </div>\n  )\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const systemSlice = createSlice({\r\n  name: 'system',\r\n  initialState: {\r\n    logo: \"KE\",\r\n    extractionDetails: null,\r\n    pdfTotalPages: null,\r\n    youtubeURL: \"\",\r\n    frames: [],\r\n    keyframes: [],\r\n    totalVideoTime: 0,\r\n    frameScriptTuple: null,\r\n    owner: null,\r\n    jobIsCompleted: false,\r\n    extractionProgress: 0,\r\n    loadedFramesNum: 600,\r\n  },\r\n  reducers: {\r\n    setYoutubeURL: (state, action) => {\r\n      state.youtubeURL = action.payload;\r\n    },\r\n    setOwner: (state, action) => {\r\n      state.owner = action.payload;\r\n    },\r\n    setFrames: (state, action) => {\r\n      state.frames = action.payload;\r\n    },\r\n    setFrameScriptTuple: (state, action) => {\r\n      state.frameScriptTuple = action.payload;\r\n    },\r\n    setPdfTotalPages: (state, action) => {\r\n      state.pdfTotalPages = action.payload;\r\n    },\r\n    setContents: (state, action) => {\r\n      state.contents = action.payload;\r\n    },\r\n    addKeyframes: (state, action) => {\r\n      state.keyframes = state.keyframes.concat(action.payload);\r\n    },\r\n    appendKeyFrame: (state, action) => {\r\n      state.keyframes = [{ vid_time: action.payload.index, img_addr: action.payload.imgAddr, userCreated: true }, ...state.keyframes];\r\n    },\r\n    completesJob: (state, action) => {\r\n      state.jobIsCompleted = true\r\n    },\r\n    setExtractionProgress: (state, action) => {\r\n      state.extractionProgress = action.payload\r\n    },\r\n    addLoadedFramesNum: (state, action) => {\r\n      state.loadedFramesNum = (state.loadedFramesNum + 600) > state.totalVideoTime ? state.totalVideoTime : (state.loadedFramesNum + 600)\r\n    },\r\n    setTotalVideoTime: (state, action) => {\r\n      state.totalVideoTime = action.payload\r\n    },\r\n    setExtractionDetails: (state, action) => {\r\n      state.extractionDetails = action.payload\r\n    },\r\n    setKeyFrames: (state, action) => {\r\n      state.keyframes = action.payload\r\n    },\r\n    toggleKeyframeFromFrame: (state, action) => {\r\n      state.frames = state.frames.map(\r\n        (frame, i) => i === action.payload.index ? { ...frame, isKey: action.payload.status } : frame);\r\n    }\r\n  },\r\n});\r\n\r\nexport const { toggleKeyframeFromFrame, setKeyFrames, setExtractionDetails, setTotalVideoTime, addLoadedFramesNum, setExtractionProgress, completesJob, appendKeyFrame, addKeyframes, setOwner, setYoutubeURL, setFrames, setFrameScriptTuple, setPdfTotalPages, setContents } = systemSlice.actions;\r\n\r\n\r\nexport const postYoutubeSrc = (link, history) => dispatch => {\r\n\r\n  console.log('SYSTEM/postYoutubeSrc')\r\n  dispatch(setYoutubeURL(link));\r\n  return axios.post(`http://ke.ddns.net/api/job`, { src: link })\r\n    .then(res => {\r\n      dispatch(setOwner(res.data.data.owner));\r\n\r\n      history.push(\"/editor\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err.status);\r\n    });\r\n};\r\n\r\nexport const getJobStatus = () => (dispatch, getState) => {\r\n\r\n  const owner = getState().system.owner;\r\n  const src = getState().system.youtubeURL;\r\n  const frames = getState().system.frames;\r\n  console.log('SYSTEM/getJobStatus')\r\n  // console.log(\"frames: \", frames);\r\n\r\n  return axios.get(`http://ke.ddns.net/api/job`, {\r\n    params: {\r\n      uuid: owner,\r\n      src: src\r\n    }\r\n  })\r\n    .then(res => {\r\n      // console.log(res.data.data);\r\n      // console.log(res.data.data.outputs.length);\r\n      var attributesJSON = JSON.parse(res.data.data.job.attributes);\r\n      // if (res.data.data.outputs.length == 0 && res.data.data.job.status == \"running\") {\r\n      //   // also add other important data about the video \r\n      //   dispatch(setExtractionDetails(attributesJSON));\r\n      //   dispatch(setTotalVideoTime(attributesJSON.length));\r\n      //   dispatch(initializeFrames(attributesJSON.length));\r\n      // }\r\n      dispatch(addKeyframes(res.data.data.outputs));\r\n      dispatch(fetchKeyFrames(res.data.data.outputs[0].id))\r\n      dispatch(setExtractionProgress(Math.round(res.data.data.outputs[res.data.data.outputs.length - 1].vid_time * 100 / attributesJSON.length)));\r\n\r\n      if (res.data.data.job.status == \"finished\") {\r\n        console.log('Job completed');\r\n        dispatch(completesJob());\r\n        dispatch(setExtractionProgress(100));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      // console.log(err.status);\r\n      // console.log(err.response);\r\n    });\r\n};\r\n\r\nexport const fetchKeyFrames = (start) => (dispatch, getState) => {\r\n\r\n  console.log('SYSTEM/fetchKeyFrames')\r\n  var frames = [];\r\n  var newFrames = [...getState().system.frames];\r\n  var keyframes = [...getState().system.keyframes];\r\n\r\n  //array.copy \r\n\r\n  //only handles sub array \r\n  // state.frames = state.frames.map(\r\n  //   (frame, i) => i === action.payload ? { ...frame, isExtracted: true, isKey: true } : frame);\r\n  // console.log(\"keyframes a:\", keyframes);\r\n  // console.log(\"frames a:\", newFrames);\r\n\r\n  keyframes.map((keyframe, index) => {\r\n    newFrames[keyframe.vid_time] = { ...newFrames[keyframe.vid_time], imgAddr: keyframe.img_addr, isExtracted: keyframe.userCreated ? false : true, isKey: true };\r\n  });\r\n\r\n  dispatch(setFrames(newFrames));\r\n};\r\n\r\nexport const initializeFrames = (numOfFrames) => (dispatch, getState) => {\r\n\r\n  dispatch(setTotalVideoTime(numOfFrames));\r\n\r\n  console.log(numOfFrames);\r\n  var seconds = numOfFrames;\r\n  var testFrames = Array.from({ length: seconds }, (v, k) => k).map(k => ({\r\n    id: `init-${k}`,\r\n    label: \"\",\r\n    isExtracted: false,\r\n    isKey: false\r\n  }));\r\n\r\n  dispatch(setFrames(testFrames));\r\n\r\n};\r\n\r\n\r\n\r\nexport const processFrameScriptTuple = (n) => (dispatch, getState) => {\r\n\r\n  console.log('SYSTEM/processFrameScriptTuple')\r\n  var keyframes = [...getState().system.keyframes];\r\n  keyframes.sort(compare);\r\n  //fetch from server\r\n\r\n  var TestFrameScriptTuple = Array.from({ length: keyframes.length }, (v, k) => k).map(k => ({\r\n    id: `fsd-${k}`,\r\n    frame: keyframes[k].img_addr,\r\n    transcript: `test script ${k}`\r\n  }));\r\n\r\n  var contents = TestFrameScriptTuple.reduce(function (contents, key, index) {\r\n    return (index % n == 0 ? contents.push([key])\r\n      : contents[contents.length - 1].push(key)) && contents;\r\n  }, []);\r\n\r\n  console.log(TestFrameScriptTuple);\r\n  console.log(contents);\r\n\r\n  dispatch(setContents(contents));\r\n  dispatch(setPdfTotalPages(TestFrameScriptTuple.length / n));\r\n  dispatch(setFrameScriptTuple(TestFrameScriptTuple));\r\n};\r\n\r\nexport const fetchNewKeyFrame = (index, status) => (dispatch, getState) => {\r\n\r\n  console.log('SYSTEM/fetchNewKeyFrame');\r\n  var youtubeURL = getState().system.youtubeURL;\r\n  dispatch(toggleKeyframeFromFrame({ index: index, status: status }));\r\n  var frameNum = parseInt(index) * 30;\r\n  if (status)\r\n    return axios.get(`http://ke.ddns.net/api/frame`, {\r\n      params: {\r\n        src: youtubeURL,\r\n        frame_no: frameNum\r\n      }\r\n    })\r\n      .then(res => {\r\n        dispatch(appendKeyFrame({ index: index, status: status, imgAddr: res.data }));\r\n      })\r\n      .catch(err => {\r\n        console.log(err.status);\r\n      });\r\n  else {\r\n    var keyframes = [...getState().system.keyframes].filter(keyframe => keyframe.vid_time != index);\r\n    // keyframes.filter(keyframe => keyframe.vid_time != index);\r\n    dispatch(setKeyFrames(keyframes));\r\n  }\r\n};\r\n\r\nfunction compare(a, b) {\r\n  if (a.vid_time < b.vid_time) {\r\n    return -1;\r\n  }\r\n  if (a.vid_time > b.vid_time) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const setLoadedFramesNum = state => state.system.loadedFramesNum;\r\nexport const selectJobIsCompleted = state => state.system.jobIsCompleted;\r\nexport const selectExtractionProgress = state => state.system.extractionProgress;\r\nexport const selectYoutubeURL = state => state.system.youtubeURL;\r\nexport const selectFrames = state => state.system.frames;\r\nexport const selectFrameScriptTuple = state => state.system.frameScriptTuple;\r\nexport const selectPdfTotalPages = state => state.system.pdfTotalPages;\r\nexport const selectContents = state => state.system.contents;\r\n\r\nexport default systemSlice.reducer;\r\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card } from '../../components/Card'\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '../../components/Button'\nimport '../../App.css';\nimport { postYoutubeSrc, fetchKeyFrames} from \"../systemSlice\";\n\nexport function Uploader() {\n  const dispatch = useDispatch();\n  const [link, setLink] = useState('https://www.youtube.com/watch?v=pZSegEXtgAE');\n  const history = useHistory();\n\n  function submit(){\n    // sample 1: https://www.youtube.com/watch?v=6u7aQV_2-2U\n    // sample 2: https://www.youtube.com/watch?v=QiTq5WrWoJw\n\n    //@TODO: error checking if its a youtube link\n    dispatch(postYoutubeSrc(link, history));\n  }\n  return (\n    <div>\n      <Card flexDirection='row' width=\"814px\" height=\"100px\">\n        <div>\n          <span>Paste Youtube Link: </span>\n          <input class=\"input\" type=\"text\" value={link} onChange={(e)=> setLink(e.target.value)}></input>\n        </div>\n        {/* <span> or </span>\n        <div style={{display:'flex', flexDirection:'row', justifyContent: 'space-between'}}>\n          <span>Upload Video:  </span>\n          <input type=\"file\" name=\"VideoToUpload\" id=\"VideoToUpload\" />\n        </div> */}\n        <Button label=\"Ready to Edit\" onClick={()=>submit()}></Button>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport { Button } from './components/Button';\r\nimport { Card } from './components/Card';\r\nimport { Uploader } from './features/uploader/Uploader';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Header />\r\n      <h1>Videos to  Frames with Key Extractor</h1>\r\n      <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Uploader />\r\n      </div>\r\n      <div className='menu'>\r\n        <Card flexDirection='column'>\r\n          <h3>Editor </h3>\r\n          <span></span>\r\n          <Button label=\"Demo\"></Button>\r\n\r\n        </Card>\r\n        <Card flexDirection='column'>\r\n          <h3>Preview</h3>\r\n          <Button label=\"Demo\"></Button>\r\n\r\n        </Card>\r\n        <Card flexDirection='column'>\r\n          <h3>Export</h3>\r\n          <Button label=\"Demo\"></Button>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport systemReducer from '../features/systemSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    system: systemReducer\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\nimport styles from './Timeline.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { addLoadedFramesNum, setLoadedFramesNum, fetchNewKeyFrame, selectFrames } from '../systemSlice';\n\nconst reorder = (list, startIndex, endIndex) => {\n  const [removed] = list.splice(startIndex, 1);\n  list.splice(endIndex, 0, removed);\n  return list;\n};\n\nexport function Timeline({ seconds, player, seekTo, playAt, extractionProgress, hoverPreview}) {\n  const dispatch = useDispatch();\n  const frames = useSelector(selectFrames);\n  const loadedFramesNum = useSelector(setLoadedFramesNum);\n  const [width, changeWidth] = useState(10);\n  const [statusText, setStatusText] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(player.getCurrentTime());\n    }\n      , 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function loadsMore() {\n    console.log('loads more, current:', loadedFramesNum);\n    dispatch(addLoadedFramesNum());\n\n  }\n\n  function viewKeyFrame(index) {\n    setProgress(index);\n    seekTo(index);\n  }\n\n\n  function skipToKeyFrame(index, img) {\n    console.log(img);\n    hoverPreview(img);\n    setProgress(index);\n    playAt(index);\n  }\n\n\n  function toggleKeyFrame(index, status = false) {\n    console.log('toggle:' + index);\n    // const newFrames = [...frames];\n    // newFrames[index].isKey = !newFrames[index].isKey;\n    status = !status;\n    dispatch(fetchNewKeyFrame(parseInt(index), status));\n    var helperText = status ? \"ADDED\" : \"REMOVED\";\n    setStatusText(\"Last \" + helperText + \" keyframe at \" + secondsToMinutes(index));\n  }\n\n  function secondsToMinutes(s) {\n    var m = Math.floor(s / 60);\n    var s = s % 60;\n    if (s < 10) return `${m}:0${s}`\n    else return `${m}:${s}`;\n  }\n\n  return (\n    <div>\n      <div class=\"controlPane\">\n        <span>Timeline </span>\n        <span>[Keyframes Extraction Status: {extractionProgress}% extracted]</span>\n        <div class=\"controlButtons\">\n          <span> {secondsToMinutes(Math.floor(progress))} /{secondsToMinutes(seconds)} </span>\n          {/* <button onClick={() => changeWidth(width + 10)}>\n            +\n          </button>\n          <button onClick={() => changeWidth(width - 10)}>\n            -\n          </button> */}\n        </div>\n      </div>\n\n      <div class=\"progressBar\">\n        {/* {console.log(progress/seconds)} */}\n        <div class=\"ExtractProgressNode\" style={{ width: `${extractionProgress}%` }} />\n        <div class=\"TimeProgressNode\" style={{ width: `${progress / seconds * 100}%` }} />\n      </div>\n\n      <InfiniteScroll\n        dataLength={loadedFramesNum} //This is important field to render the next data\n        next={loadsMore}\n        hasMore={true}\n        className=\"wrapper\">\n        {frames.slice(0, loadedFramesNum).map((frame, index) =>\n          <div\n            onH\n            class=\"item\"\n            style={{ display: 'flex', backgroundColor: frame.isKey ? 'lightgray' : 'white' }}\n          >\n            <div class=\"view\" style={{ display: 'flex', width: width, flex: 3 }} onDoubleClick={() => skipToKeyFrame(index, frame.imgAddr)} onClick={() => { frame.isKey ? viewKeyFrame(index) : toggleKeyFrame(index, frame.isKey) }}></div>\n            {frame.isKey ? (<div class=\"remove\" style={{ display: 'flex', justifyContent: 'center', backgroundColor: frame.isExtracted ? 'aquamarine' : 'pink', flex: 1 }} onClick={() => toggleKeyFrame(index, frame.isKey)}>x</div>) : (<div style={{ display: 'flex', flex: 0 }} class=\"none\"></div>)}\n          </div>\n        )}\n      </InfiniteScroll>\n\n      <div class=\"helperText\">{statusText}   </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nexport function PDFTemplate({\n  contents = [{\n    frame: \"https://images.unsplash.com/photo-1616788590183-c6b1d59a9b78?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 1\",\n  },\n  {\n    frame: \"https://images.unsplash.com/photo-1593642532744-d377ab507dc8?ixid=MXwxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxNnx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 2\",\n  },\n  {\n    frame: \"https://images.unsplash.com/photo-1616788590183-c6b1d59a9b78?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 3\",\n  },\n  {\n    frame: \"https://images.unsplash.com/photo-1616788590183-c6b1d59a9b78?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 4\",\n  }]\n  , title = \"Nice Slides\", enableTranscript, KFA = false }) {\n\n  function getToday() {\n    var utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n    return utc;\n  }\n  return (\n    <div style={{ width: 595 - 44, height: 595 * 1.618 - 44, padding: 24 }}>\n\n      <div style={{ display: 'flex', height: 60, alignItems: 'flex-end', justifyContent: 'space-between', flexDirection: 'row' }}>\n        <div>{title} </div>\n        <div>created on KE on {getToday()} </div>\n      </div>\n\n      {KFA ? (\n        <div style={{ justifyContent: 'center', alignItems: 'center', flexDirection: 'row', marginTop: 16, marginBottom: 16, border: '1px solid black', weight: 546, height: 640 }} >\n          KFA Content\n        </div>) : (\n        <div>\n          {contents.map((content, index) => (\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexDirection: 'row', marginTop: 16, marginBottom: 16 }}>\n              <div style={{ display: 'flex', border: '1px solid black', height: 146, width: 261, justifyContent: 'center', alignItems: 'center' }}>\n                <img src={content.frame} height={146} width={261} />\n              </div>\n              {enableTranscript ? (\n                <textarea rows=\"10\" defaultValue={content.transcript} style={{ resize: 'none', width: 261, height: 144 }}>\n                \n                </textarea>\n              ) : (\n                <textarea rows=\"10\" style={{ resize: 'none', width: 261, height: 144 }}>\n\n                </textarea>)}\n\n            </div>\n\n          ))}\n        </div>)}\n\n      <div style={{ display: 'flex', alignItems:'center', justifyContent: 'center', flexDirection: 'column', margin: 16}}>\n\n        <div> Footnote</div>\n        <textarea rows=\"7\" style={{ resize: 'none', width: 550}}>\n          \n        </textarea>\n\n      </div>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { Counter } from './features/counter/Counter';\r\nimport { Uploader } from './features/uploader/Uploader';\r\nimport { Editor } from './features/editor/Editor';\r\nimport { Preview } from './features/preview/Preview';\r\nimport { Export } from './features/export/Export';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'fontsource-roboto';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch\r\n} from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/' component={App}></Route>\r\n              <Route exact path='/counter' component={Counter}></Route>\r\n              <Route exact path='/uploader' component={Uploader}></Route>\r\n              <Route exact path='/editor' component={Editor}></Route>\r\n              <Route exact path='/preview' component={Preview}></Route>\r\n              <Route exact path='/export' component={Export}></Route>\r\n            </Switch>\r\n          </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  decrement,\r\n  increment,\r\n  incrementAsync,\r\n  selectCount,\r\n  incrementByAmount\r\n} from './counterSlice';\r\nimport styles from './Counter.module.css';\r\n\r\nexport function Counter() {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n  const [incrementAmount, setIncrementAmount] = useState('2');\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Increment value\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          +\r\n        </button>\r\n        <span className={styles.value}>{count}</span>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <input\r\n          className={styles.textbox}\r\n          aria-label=\"Set increment amount\"\r\n          value={incrementAmount}\r\n          onChange={e => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          onClick={() =>\r\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\r\n          }\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          className={styles.asyncButton}\r\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Async\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Header } from '../../components/Header';\nimport { Button } from '../../components/Button';\nimport { Timeline } from './Timeline'\nimport YouTube from 'react-youtube';\nimport { initializeFrames, selectExtractionProgress, selectJobIsCompleted, selectYoutubeURL, getJobStatus, setKeyFrames } from '../systemSlice';\n\nexport function Editor() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const extractionProgress = useSelector(selectExtractionProgress);\n  const jobIsCompleted = useSelector(selectJobIsCompleted);\n  const youtubeURL = useSelector(selectYoutubeURL);\n  const [playerObj, setPlayerObj] = useState(null);\n  const [intervalID, setIntervalID] = useState(null);\n  const [seconds, setSeconds] = useState(800);\n  const [isLoading, setIsLoading] = useState(true);\n  const [previewAddr, setPreviewAddr] = useState(\"\");\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  // calling dispatch(getJobStatus()) every 5 seconds\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (!jobIsCompleted) {\n        dispatch(getJobStatus());\n        console.log(\"fetch new frames every 2 seconds\")\n      }\n    }\n      , 2000);\n\n      setIntervalID(intervalId);\n  }, []); //stop when job is finished \n\n  useEffect(() => {\n    clearInterval(intervalID);\n  }, [jobIsCompleted]); //stop when job is finished \n\n\n  const onReady = (e) => {\n    // console.log(e.target);\n    setPlayerObj(e.target);\n    setSeconds(e.target.getDuration());\n    setIsLoading(false);\n    dispatch(initializeFrames(e.target.getDuration()));\n    e.target.playVideo();\n  }\n\n  function onStateChange(e) {\n    // console.log(e.target.getCurrentTime());\n  }\n\n  function seekTo(second) {\n    // console.log(\"seek to: \", second);\n    playerObj.seekTo(second);\n    playerObj.pauseVideo();\n  }\n\n  function playAt(second) {\n    // console.log(\"play at: \", second);\n    playerObj.seekTo(second);\n    playerObj.playVideo();\n  }\n\n  function saveAndPreview() {\n    history.push(\"/preview\");\n  }\n\n  function resetKeyframes() {\n    dispatch(initializeFrames(seconds)) ;\n  }\n\n  function hovered(img){\n    console.log(img);\n    setPreviewAddr(img);\n  }\n\n\n  return (\n    <div>\n      <Header />\n      <div style={{ display: 'flex', marginRight: 20, marginBottom: 10, justifyContent: 'flex-end' }}>\n        <Button onClick={() => resetKeyframes()} label=\"Reset Keyframes\"></Button>\n        <Button onClick={() => saveAndPreview()} label=\"Preview PDF\"></Button>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', height: '400px', marginInline: 20 }}>\n        <div>\n          <span>Instruction</span>\n          <ol>\n            <li> Add Keyframe by clicking a frame on Timeline. </li>\n            <li> Remove Keyframe by clicking (x) on it. </li>\n            <li> Move Keyframe by dragging it on Timeline </li>\n            <li> Click on Keyframe to view the Keyframe on Video Player </li>\n            <li> Double click on frame to play from it</li>\n            <li> Export when you feel good about all the Keyframes </li>\n          </ol>\n          <span>Keyframe Preview</span>\n          <div style={{ display: 'flex', border: '1px solid black', height: 146, width: 261, justifyContent: 'center', alignItems: 'center', marginLeft: 30  }}>\n                <img src={previewAddr} height={146} width={261} />\n          </div>\n\n        </div>\n        <YouTube videoId={youtubeURL.split('=')[1]} opts={opts} onReady={onReady} onStateChange={onStateChange} />\n      </div>\n\n      {!isLoading ? (\n        <Timeline extractionProgress={extractionProgress} isLoading={isLoading} seconds={seconds} player={playerObj} seekTo={seekTo} playAt={playAt} hoverPreview={(img)=>setPreviewAddr(img)} />\n      ) : (\n        <></>\n      )}\n\n    </div >\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Header } from '../../components/Header';\nimport { Button } from '../../components/Button';\nimport { Card } from '../../components/Card';\nimport { PDFTemplate } from './PDFTemplate'\nimport { selectContents, selectPdfTotalPages, processFrameScriptTuple } from '../systemSlice';\n\nexport function Preview() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const contents = useSelector(selectContents);\n  const [title, setTitle] = useState('New Note');\n  const [enableTranscript, switchEnableTranscript] = useState(true);\n  const [enableKFA, switchEnableKFA] = useState(false);\n\n  useEffect(() => {\n    dispatch(processFrameScriptTuple(4)); //reduce frame scripts duples to group of 4. \n  }, []);\n\n\n\n  function triggerPrint() {\n    document.getElementById('toPrint').style.overflow = 'unset';\n    // document.getElementById('hide').style.visibility = 'hidden';\n    document.getElementById('hide').style.display = 'none';\n    document.getElementById('hideHeader').style.display = 'none';\n    document.getElementById('hideButtons').style.display = 'none';\n\n    // var originalContents = document.getElementById('original').innerHTML;\n    // document.body.innerHTML = printContents;\n    \n    document.title = title;\n    window.print();\n\n    document.getElementById('hide').style.display = 'flex';\n    document.getElementById('hideButtons').style.display = 'flex';\n    document.getElementById('hideHeader').style.display = 'flex';\n    document.getElementById('toPrint').style.overflow = 'scroll';\n  }\n\n  function finishPreview() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div id='original'>\n      <div id='hideHeader'>\n        <Header />\n      </div>\n\n      <div id='hideButtons' style={{ display: 'flex', marginRight: 20, marginBottom: 10, justifyContent: 'flex-end' }}>\n        <Button label=\"Back\" onClick={() => {history.push(\"editor\")}}></Button>\n        <Button label=\"Finish\" onClick={() => finishPreview()}></Button>\n      </div>\n      <div id='hide' style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginInline: 20 }}>\n        <Card height={'20%'} width={'80%'} flexDirection={'column'}>\n          <div>\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n              <div style={{ display: 'flex', flex: 1, alignItems: 'center' }} > Page Title:\n              <input style={{ width: 180, margin: 5 }} class=\"input\" type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}></input>\n              </div>\n              <div style={{ display: 'flex', flex: 2 }} >Export Format:\n              <div onChange={() => switchEnableTranscript(!enableTranscript)}>\n                  <div>\n                    <input type=\"radio\" id=\"ft\" name=\"ft\" value=\"ft\" checked={enableTranscript} />\n                    <label for=\"ft\">Frames and Transcript</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" id=\"fe\" name=\"fe\" value=\"fe\" checked={!enableTranscript} />\n                    <label for=\"fe\">Frames only</label>\n                  </div>\n                </div>\n              </div>\n              <div style={{ display: 'flex', flex: 1 }}>Enable Key Frame Analysis:\n              <input type=\"checkbox\" id=\"KFA\" name=\"KFA\" checked={enableKFA} onChange={() => switchEnableKFA(!enableKFA)}></input>\n              </div>\n            </div>\n          </div>\n          <Button label=\"Print as PDF\" onClick={() => triggerPrint()}></Button>\n        </Card>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginInline: 20 }}>\n        <div id=\"toPrint\" style={{ overflowY: 'scroll', height: 580, display: 'block', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginInline: 20 }}>\n          {enableKFA ? (<PDFTemplate title={title} KFA={true} />) : (<> </>)}\n\n          {contents ? (\n            contents.map((contents, index) =>\n              <>\n                <PDFTemplate key={index} title={title} contents={contents} enableKFA={enableKFA} enableTranscript={enableTranscript} />\n                <div class=\"pagebreak\"> </div>\n              </>\n            )\n          ) : <div>loading...</div>}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import {\n//   decrement,\n//   increment,\n//   incrementByAmount,\n//   incrementAsync,\n//   selectCount,\n// } from './counterSlice';\n// import styles from './Counter.module.css';\n\nexport function Export() {\n  // const count = useSelector(selectCount);\n  // const dispatch = useDispatch();\n  // const [incrementAmount, setIncrementAmount] = useState('2');\n\n  return (\n    <div>\n      <span>Download PDF</span>\n    </div>\n  );\n}\n"],"sourceRoot":""}
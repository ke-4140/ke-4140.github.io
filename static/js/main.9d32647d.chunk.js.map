{"version":3,"sources":["components/Header.js","components/Button.js","components/Card.js","features/systemSlice.js","App.js","app/store.js","features/editor/Timeline.js","features/preview/PDFTemplate.js","serviceWorker.js","index.js","features/editor/Editor.js","features/preview/Preview.js","features/export/Export.js"],"names":["Header","className","to","Button","onClick","label","iconBefore","iconAfter","width","height","type","style","Card","onPress","flexDirection","children","justifyContent","systemSlice","createSlice","name","initialState","logo","extractionDetails","pdfTotalPages","youtubeURL","frames","keyframes","totalVideoTime","frameScriptTuple","owner","jobIsCompleted","extractionProgress","loadedFramesNum","reducers","setYoutubeURL","state","action","payload","setOwner","setFrames","setFrameScriptTuple","setPdfTotalPages","setContents","contents","addKeyframes","concat","appendKeyFrame","vid_time","index","img_addr","imgAddr","userCreated","completesJob","setExtractionProgress","addLoadedFramesNum","setTotalVideoTime","setExtractionDetails","setKeyFrames","toggleKeyframeFromFrame","map","frame","i","isKey","status","actions","fetchKeyFrames","start","dispatch","getState","console","log","newFrames","system","keyframe","isExtracted","initializeFrames","numOfFrames","seconds","testFrames","Array","from","length","v","k","id","fetchNewKeyFrame","addr","parseInt","filter","compare","a","b","setLoadedFramesNum","selectJobIsCompleted","selectExtractionProgress","selectYoutubeURL","selectFrames","selectContents","App","useDispatch","useState","link","setLink","history","useHistory","submitURL","axios","post","src","then","res","data","push","catch","err","postYoutubeSrc","opts","playerVars","autoplay","marginTop","display","alignItems","fontWeight","textDecoration","color","position","left","top","marginBottom","backgroundColor","padding","borderRadius","boxShadow","value","onChange","e","target","textAlign","url","pdf","demoLink","videoId","split","configureStore","reducer","systemReducer","Timeline","player","seekTo","playAt","useSelector","previewImage","setPreviewImage","statusText","setStatusText","progress","setProgress","toggleKeyFrame","helperText","secondsToMinutes","s","m","Math","floor","useEffect","interval","setInterval","getCurrentTime","clearInterval","onMouseMove","visibility","borderStyle","borderWidth","borderColor","class","dataLength","next","hasMore","slice","onMouseOver","updatePosition","flex","onMouseLeave","document","getElementById","onMouseEnter","event","x","clientX","y","clientY","preview","moveImg","onDoubleClick","img","skipToKeyFrame","viewKeyFrame","cursor","PDFTemplate","transcript","title","enableTranscript","KFA","Date","toJSON","replace","border","weight","content","rows","defaultValue","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","exact","path","component","playerObj","setPlayerObj","intervalID","setIntervalID","setSeconds","isLoading","setIsLoading","intervalId","get","params","uuid","attributesJSON","JSON","parse","job","attributes","outputs","round","marginRight","marginInline","bottom","onReady","getDuration","playVideo","onStateChange","second","pauseVideo","setTitle","switchEnableTranscript","enableKFA","switchEnableKFA","n","sort","TestFrameScriptTuple","reduce","key","overflow","print","checked","for","overflowY","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d32647d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import {\n//   decrement,\n//   increment,\n//   incrementByAmount,\n//   incrementAsync,\n//   selectCount,\n// } from './counterSlice';\nimport styles from './Header.css';\n\nexport function Header() {\n  return (\n    <header>\n      <div className=\"topNavBar\">\n        <div><Link className=\"logo\" to=\"/\">KE</Link></div>\n          {/* <Link className=\"tabItem\" to=\"/\">Home</Link>\n          <Link className=\"tabItem\" to=\"/uploader\">Upload</Link>\n          <Link className=\"tabItem\" to=\"/editor\">Editor</Link>\n          <Link className=\"tabItem\" to=\"/preview\">Preview</Link>\n          <Link className=\"tabItem\" to=\"/download\">Download</Link> */}\n      </div>\n      {/* <hr className=\"divider\" class=\"solid\"></hr> */}\n    </header>\n  );\n}","import React, { useState } from 'react';\nimport styles from './Button.css';\n//todo: disable state color schemes s\nexport function Button({\n  onClick,\n  iconBefore, //icon before label\n  label, //text \n  iconAfter, //icon after label\n  width = '150px',\n  height= '25px' // (large, medium, small) \n}) {\n  return (\n    <div type=\"button\" className=\"button\" style={{width: width}} onClick={onClick}>\n      <span className=\"label\">{label}</span>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport styles from './Card.css';\n//todo: disable state color schemes s\nexport function Card({\n  onPress,\n  iconBefore, //icon before label\n  label, //text \n  iconAfter, //icon after label\n  width = '250px',\n  height = '300px',\n  flexDirection = 'row', // (large, medium, small)\n  children\n}) {\n  return (\n    <div type=\"card\" className=\"card\" style={{ width: width, height: height, flexDirection: flexDirection, justifyContent: 'space-around' }} onClick={onPress}>\n      {children}\n    </div>\n  )\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const systemSlice = createSlice({\r\n  name: 'system',\r\n  initialState: {\r\n    logo: \"KE\",\r\n    extractionDetails: null,\r\n    pdfTotalPages: null,\r\n    youtubeURL: \"\",\r\n    frames: [],\r\n    keyframes: [],\r\n    totalVideoTime: 0,\r\n    frameScriptTuple: null,\r\n    owner: null,\r\n    jobIsCompleted: false,\r\n    extractionProgress: 0,\r\n    loadedFramesNum: 600,\r\n  },\r\n  reducers: {\r\n    setYoutubeURL: (state, action) => {\r\n      state.youtubeURL = action.payload;\r\n    },\r\n    setOwner: (state, action) => {\r\n      state.owner = action.payload;\r\n    },\r\n    setFrames: (state, action) => {\r\n      state.frames = action.payload;\r\n    },\r\n    setFrameScriptTuple: (state, action) => {\r\n      state.frameScriptTuple = action.payload;\r\n    },\r\n    setPdfTotalPages: (state, action) => {\r\n      state.pdfTotalPages = action.payload;\r\n    },\r\n    setContents: (state, action) => {\r\n      state.contents = action.payload;\r\n    },\r\n    addKeyframes: (state, action) => {\r\n      state.keyframes = state.keyframes.concat(action.payload);\r\n    },\r\n    appendKeyFrame: (state, action) => {\r\n      state.keyframes = [{ vid_time: action.payload.index, img_addr: action.payload.imgAddr, userCreated: true }, ...state.keyframes];\r\n    },\r\n    completesJob: (state, action) => {\r\n      state.jobIsCompleted = true\r\n    },\r\n    setExtractionProgress: (state, action) => {\r\n      state.extractionProgress = action.payload\r\n    },\r\n    addLoadedFramesNum: (state, action) => {\r\n      state.loadedFramesNum = (state.loadedFramesNum + 600) > state.totalVideoTime ? state.totalVideoTime : (state.loadedFramesNum + 600)\r\n    },\r\n    setTotalVideoTime: (state, action) => {\r\n      state.totalVideoTime = action.payload\r\n    },\r\n    setExtractionDetails: (state, action) => {\r\n      state.extractionDetails = action.payload\r\n    },\r\n    setKeyFrames: (state, action) => {\r\n      state.keyframes = action.payload\r\n    },\r\n    toggleKeyframeFromFrame: (state, action) => {\r\n      state.frames = state.frames.map(\r\n        (frame, i) => i === action.payload.index ? { ...frame, isKey: action.payload.status, imgAddr: action.payload.imgAddr } : frame);\r\n    }\r\n  },\r\n});\r\n\r\nexport const { toggleKeyframeFromFrame, setKeyFrames, setExtractionDetails, setTotalVideoTime, addLoadedFramesNum, setExtractionProgress, completesJob, appendKeyFrame, addKeyframes, setOwner, setYoutubeURL, setFrames, setFrameScriptTuple, setPdfTotalPages, setContents } = systemSlice.actions;\r\n\r\n\r\nexport const postYoutubeSrc = (link, history) => dispatch => {\r\n\r\n  console.log('SYSTEM/postYoutubeSrc')\r\n  dispatch(setYoutubeURL(link));\r\n  return axios.post(`http://ke.ddns.net/api/job`, { src: link })\r\n    .then(res => {\r\n      dispatch(setOwner(res.data.data.owner));\r\n      history.push(\"/editor\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err.status);\r\n    });\r\n};\r\n\r\nexport const getJobStatus = () => (dispatch, getState) => {\r\n\r\n  const owner = getState().system.owner;\r\n  const src = getState().system.youtubeURL;\r\n  const frames = getState().system.frames;\r\n  console.log('SYSTEM/getJobStatus')\r\n  // console.log(\"frames: \", frames);\r\n\r\n  return axios.get(`http://ke.ddns.net/api/job`, {\r\n    params: {\r\n      uuid: owner,\r\n      src: src\r\n    }\r\n  })\r\n    .then(res => {\r\n      // console.log(res.data.data);\r\n      // console.log(res.data.data.outputs.length);\r\n      var attributesJSON = JSON.parse(res.data.data.job.attributes);\r\n      // if (res.data.data.outputs.length == 0 && res.data.data.job.status == \"running\") {\r\n      //   // also add other important data about the video \r\n      //   dispatch(setExtractionDetails(attributesJSON));\r\n      //   dispatch(setTotalVideoTime(attributesJSON.length));\r\n      //   dispatch(initializeFrames(attributesJSON.length));\r\n      // }\r\n      dispatch(addKeyframes(res.data.data.outputs));\r\n      dispatch(fetchKeyFrames(res.data.data.outputs[0].id))\r\n      dispatch(setExtractionProgress(Math.round(res.data.data.outputs[res.data.data.outputs.length - 1].vid_time * 100 / attributesJSON.length)));\r\n\r\n      if (res.data.data.job.status == \"finished\") {\r\n        console.log('Job completed');\r\n        dispatch(completesJob());\r\n        dispatch(setExtractionProgress(100));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      // console.log(err.status);\r\n      // console.log(err.response);\r\n    });\r\n};\r\n\r\nexport const fetchKeyFrames = (start) => (dispatch, getState) => {\r\n\r\n  console.log('SYSTEM/fetchKeyFrames')\r\n  var frames = [];\r\n  var newFrames = [...getState().system.frames];\r\n  var keyframes = [...getState().system.keyframes];\r\n\r\n  //array.copy \r\n\r\n  //only handles sub array \r\n  // state.frames = state.frames.map(\r\n  //   (frame, i) => i === action.payload ? { ...frame, isExtracted: true, isKey: true } : frame);\r\n  // console.log(\"keyframes a:\", keyframes);\r\n  // console.log(\"frames a:\", newFrames);\r\n\r\n  keyframes.map((keyframe, index) => {\r\n    newFrames[keyframe.vid_time] = { ...newFrames[keyframe.vid_time], imgAddr: keyframe.img_addr, isExtracted: keyframe.userCreated ? false : true, isKey: true };\r\n  });\r\n\r\n  dispatch(setFrames(newFrames));\r\n};\r\n\r\nexport const initializeFrames = (numOfFrames) => (dispatch, getState) => {\r\n\r\n  dispatch(setTotalVideoTime(numOfFrames));\r\n\r\n  console.log(numOfFrames);\r\n  var seconds = numOfFrames;\r\n  var testFrames = Array.from({ length: seconds }, (v, k) => k).map(k => ({\r\n    id: `init-${k}`,\r\n    label: \"\",\r\n    isExtracted: false,\r\n    isKey: false\r\n  }));\r\n\r\n  dispatch(setFrames(testFrames));\r\n\r\n};\r\n\r\n\r\n\r\nexport const processFrameScriptTuple = (n) => (dispatch, getState) => {\r\n\r\n  console.log('SYSTEM/processFrameScriptTuple')\r\n  var keyframes = [...getState().system.keyframes];\r\n  keyframes.sort(compare);\r\n  //fetch from server\r\n\r\n  var TestFrameScriptTuple = Array.from({ length: keyframes.length }, (v, k) => k).map(k => ({\r\n    id: `fsd-${k}`,\r\n    frame: keyframes[k].img_addr,\r\n    transcript: `test script ${k}`\r\n  }));\r\n\r\n  var contents = TestFrameScriptTuple.reduce(function (contents, key, index) {\r\n    return (index % n == 0 ? contents.push([key])\r\n      : contents[contents.length - 1].push(key)) && contents;\r\n  }, []);\r\n\r\n  console.log(TestFrameScriptTuple);\r\n  console.log(contents);\r\n\r\n  dispatch(setContents(contents));\r\n  dispatch(setPdfTotalPages(TestFrameScriptTuple.length / n));\r\n  dispatch(setFrameScriptTuple(TestFrameScriptTuple));\r\n};\r\n\r\nexport const fetchNewKeyFrame = (index, status) => (dispatch, getState) => {\r\n\r\n  console.log('SYSTEM/fetchNewKeyFrame');\r\n  var youtubeURL = getState().system.youtubeURL;\r\n  var frameNum = parseInt(index) * 30;\r\n  var addr = 'http://ke.ddns.net/api/frame?src=' + youtubeURL+' &frame_no=' + frameNum;\r\n  dispatch(toggleKeyframeFromFrame({ index: index, status: status, imgAddr: addr }));\r\n  if (status) //add\r\n    dispatch(appendKeyFrame({ index: index, status: status, imgAddr: addr }));\r\n  else { //remove\r\n    var keyframes = [...getState().system.keyframes].filter(keyframe => keyframe.vid_time != index);\r\n    dispatch(setKeyFrames(keyframes));\r\n  }\r\n};\r\n\r\nfunction compare(a, b) {\r\n  if (a.vid_time < b.vid_time) {\r\n    return -1;\r\n  }\r\n  if (a.vid_time > b.vid_time) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\n\r\nexport const setLoadedFramesNum = state => state.system.loadedFramesNum;\r\nexport const selectJobIsCompleted = state => state.system.jobIsCompleted;\r\nexport const selectExtractionProgress = state => state.system.extractionProgress;\r\nexport const selectYoutubeURL = state => state.system.youtubeURL;\r\nexport const selectFrames = state => state.system.frames;\r\nexport const selectFrameScriptTuple = state => state.system.frameScriptTuple;\r\nexport const selectPdfTotalPages = state => state.system.pdfTotalPages;\r\nexport const selectContents = state => state.system.contents;\r\n\r\nexport default systemSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from './components/Header';\r\nimport { Button } from './components/Button';\r\nimport { Card } from './components/Card';\r\nimport './App.css';\r\nimport YouTube from 'react-youtube';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postYoutubeSrc, submitURL } from \"../src/features/systemSlice\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const [link, setLink] = useState('https://www.youtube.com/watch?v=a6sNwOSAxoo');\r\n  const demoLinks = [\r\n    {\r\n      url: \"https://www.youtube.com/watch?v=-dhMbVEreII\",\r\n      name: \"How To Build A Chrome Extension (2021 Web Development)\",\r\n      vid_time: '27:15',\r\n      pdf: ''\r\n    },\r\n    {\r\n      url: \"https://www.youtube.com/watch?v=mQpureQcEXM\",\r\n      name: \"Webinar: Continuous Delivery with Docker, Kubernetes, and GoCD\",\r\n      vid_time: '50:17',\r\n      pdf: ''\r\n\r\n    },\r\n    {\r\n      url: \"https://www.youtube.com/watch?v=a6sNwOSAxoo\",\r\n      name: \"Styles & Theming in React Native - a webinar by Haris Mahmood\",\r\n      vid_time: '1:23:56',\r\n      pdf: ''\r\n    }\r\n  ];\r\n  const history = useHistory();\r\n\r\n  function submitURL(link) {\r\n    // sample 1: https://www.youtube.com/watch?v=6u7aQV_2-2U\r\n    // sample 2: https://www.youtube.com/watch?v=QiTq5WrWoJw\r\n\r\n    //@TODO: error checking if its a youtube link\r\n    dispatch(postYoutubeSrc(link, history));\r\n  }\r\n\r\n  function downloadPdf(pdf) {\r\n\r\n  }\r\n\r\n  const opts = {\r\n    height: '120',\r\n    width: '213',\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className='app'>\r\n      {/* <Header />\r\n      <h1>Videos to  Frames with Key Extractor</h1>\r\n      <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <div>\r\n          <Card flexDirection='row' width=\"814px\" height=\"100px\">\r\n            <div>\r\n              <span>Paste Youtube Link: </span>\r\n              <input class=\"input\" type=\"text\" value={link} onChange={(e) => setLink(e.target.value)}></input>\r\n            </div>\r\n            <Button label=\"Ready to Edit\" onClick={() => submitURL(link)}></Button>\r\n          </Card>\r\n        </div> */}\r\n      {/* <Header /> */}\r\n      <div style={{ marginTop: 100, display: \"flex\", alignItems: \"center\", justifyContent: \"center\", }}>\r\n        <div style={{ width: 814 }}>\r\n          <Link to=\"/\" style={{ fontWeight: \"bolder\", textDecoration: \"none\", color: \"black\" }}>Keyframe Extractor</Link>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\" }}>\r\n        <h1 style={{ position: \"relative\" }}>\r\n          Extract what matters in a video\r\n          <div style={{\r\n            position: \"absolute\",\r\n            left: 444,\r\n            top: -40,\r\n          }}>\r\n            <img src=\"landing-image.png\"\r\n              style={{\r\n                width: 400,\r\n              }} />\r\n          </div>\r\n        </h1>\r\n        <div className=\"subheading\">\r\n          Detect key frames, transcribe video, export PDF.\r\n          <br />\r\n          All can be done in a few clicks.\r\n        </div>\r\n\r\n        <div style={{\r\n          marginBottom: 60,\r\n          width: 814\r\n        }}>\r\n          <span>Tired of watching hour-long videos?</span>\r\n\r\n          <div style={{ height: 8 }} />\r\n\r\n          <div style={{\r\n            display: \"flex\",\r\n            width: \"fit-content\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: \"white\",\r\n            // border: \"1px solid black\",\r\n            padding: 8,\r\n            borderRadius: 5,\r\n            boxShadow: \"5px 10px 20px #DADADA\",\r\n          }}>\r\n            <input className=\"input\" type=\"text\" value={link} onChange={(e) => setLink(e.target.value)}></input>\r\n            <Button label=\"Ready to Edit\" onClick={() => submitURL(link)}></Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{height: 50, textAlign: \"center\", marginTop: 30}}>\r\n        Demo\r\n      </div>\r\n\r\n      <div className='menu'>\r\n        {/* const [demoLink, setDemoLink] = useState('https://www.youtube.com/watch?v=a6sNwOSAxoo'); */}\r\n        <Card flexDirection='row' width=\"814px\" height=\"340px\">\r\n          {demoLinks.map((demoLink, i) => (\r\n            <div style={{ display: 'flex', height: 300, flexDirection: 'column', alignItems: \"center\", textAlign: 'center', justifyContent: 'space-around' }}>\r\n              <YouTube videoId={demoLink.url.split('=')[1]} opts={opts} />\r\n              <span> {demoLink.name} </span>\r\n              <text> Duration: {demoLink.vid_time}</text>\r\n              <Button label=\"Try the Demo\" onClick={() => submitURL(demoLink.url)}></Button>\r\n              <Button label=\"Download Result PDF\" onClick={() => downloadPdf(demoLink.pdf)}></Button>\r\n            </div>\r\n          ))}\r\n\r\n        </Card>\r\n      </div>\r\n\r\n      <div style={{ height: 40 }} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport systemReducer from '../features/systemSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    system: systemReducer\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\nimport styles from './Timeline.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { addLoadedFramesNum, setLoadedFramesNum, fetchNewKeyFrame, selectFrames } from '../systemSlice';\n\nconst reorder = (list, startIndex, endIndex) => {\n  const [removed] = list.splice(startIndex, 1);\n  list.splice(endIndex, 0, removed);\n  return list;\n};\n\nexport function Timeline({ seconds, player, seekTo, playAt, extractionProgress }) {\n  const dispatch = useDispatch();\n  const frames = useSelector(selectFrames);\n  const loadedFramesNum = useSelector(setLoadedFramesNum);\n  const [previewImage, setPreviewImage] = useState('https://149359300.v2.pressablecdn.com/wp-content/uploads/2019/11/placeholder.png');\n  const [statusText, setStatusText] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(player.getCurrentTime());\n    }\n      , 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function loadsMore() {\n    console.log('loads more, current:', loadedFramesNum);\n    dispatch(addLoadedFramesNum());\n\n  }\n\n  function viewKeyFrame(index) {\n    setProgress(index);\n    seekTo(index);\n  }\n\n\n  function skipToKeyFrame(index, img) {\n    setProgress(index);\n    playAt(index);\n  }\n\n\n  function toggleKeyFrame(index, status = false) {\n    console.log('toggle:' + index);\n    status = !status;\n    dispatch(fetchNewKeyFrame(parseInt(index), status));\n    var helperText = status ? \"ADDED\" : \"REMOVED\";\n    setStatusText(\"Last \" + helperText + \" keyframe at \" + secondsToMinutes(index));\n  }\n\n  function secondsToMinutes(s) {\n    var m = Math.floor(s / 60);\n    var s = s % 60;\n    if (s < 10) return `${m}:0${s}`\n    else return `${m}:${s}`;\n  }\n\n  function updatePosition(index) {\n    setStatusText(\"Mouse is on \" + secondsToMinutes(index));\n  }\n\n  function moveImg(event, isKey, imgAddr) {\n\n    if (isKey && imgAddr) {\n      setPreviewImage(imgAddr);\n      var x = event.clientX;\n      var y = event.clientY - 146;\n      \n      var preview = document.getElementById(\"preview\");\n\n      preview.style.visibility = 'visible';\n      preview.style.left = x + 'px';\n      preview.style.top = y + 'px';\n    }\n  }\n\n  function hidePreview() {\n      var preview = document.getElementById(\"preview\");\n      preview.style.visibility = 'hidden';\n  }\n\n  return (\n    <div>\n      <div onMouseMove=\"moveImg(event)\">\n        <img height={146} width={261} style={{ position: 'absolute', visibility: 'hidden', borderStyle: 'solid', borderWidth: '1px' , borderColor: 'grey' }} src={previewImage} id='preview' />\n      </div>\n      <div class=\"controlPane\">\n        <span class=\"helperText\">{statusText}</span>\n        <div class=\"controlButtons\">\n          <span> {secondsToMinutes(Math.floor(progress))} /{secondsToMinutes(seconds)} </span>\n        </div>\n      </div>\n\n      <div class=\"progressBar\">\n        {/* {console.log(progress/seconds)} */}\n        <div class=\"TimeProgressNode\" style={{ width: `${progress / seconds * 100}%` }} />\n      </div>\n\n      <InfiniteScroll\n        dataLength={loadedFramesNum} //This is important field to render the next data\n        next={loadsMore}\n        hasMore={true}\n        className=\"wrapper\">\n        {frames.slice(0, loadedFramesNum).map((frame, index) =>\n          <div\n            key={index}\n            onMouseOver={() => updatePosition(index)}\n            class=\"item\"\n            style={{ display: 'flex', backgroundColor: frame.isKey ? 'lightgray' : 'white' }}\n          >\n            <div class=\"view\" style={{ display: 'flex', width: 10, flex: 3 }} onMouseLeave={()=>hidePreview()} onMouseEnter={(e) => { moveImg(e, frame.isKey, frame.imgAddr) }} onDoubleClick={() => skipToKeyFrame(index, frame.imgAddr)} onClick={() => { frame.isKey ? viewKeyFrame(index) : toggleKeyFrame(index, frame.isKey) }}></div>\n            {frame.isKey ? (<div class=\"remove\" style={{ display: 'flex', justifyContent: 'center', backgroundColor: frame.isExtracted ? 'aquamarine' : 'pink', flex: 1, cursor: \"pointer\" }} onClick={() => toggleKeyFrame(index, frame.isKey)}>×</div>) : (<div style={{ display: 'flex', flex: 0 }} class=\"none\"></div>)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\n\nexport function PDFTemplate({\n  contents = [{\n    frame: \"https://images.unsplash.com/photo-1616788590183-c6b1d59a9b78?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 1\",\n  },\n  {\n    frame: \"https://images.unsplash.com/photo-1593642532744-d377ab507dc8?ixid=MXwxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxNnx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 2\",\n  },\n  {\n    frame: \"https://images.unsplash.com/photo-1616788590183-c6b1d59a9b78?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 3\",\n  },\n  {\n    frame: \"https://images.unsplash.com/photo-1616788590183-c6b1d59a9b78?ixid=MXwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHw1fHx8ZW58MHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\",\n    transcript: \"testing script 4\",\n  }]\n  , title = \"Nice Slides\", enableTranscript, KFA = false }) {\n\n  function getToday() {\n    var utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/');\n    return utc;\n  }\n  return (\n    <div style={{ width: 595 - 44, height: 595 * 1.618 - 44, padding: 24 }}>\n\n      <div style={{ display: 'flex', height: 60, alignItems: 'flex-end', justifyContent: 'space-between', flexDirection: 'row' }}>\n        <div>{title} </div>\n        <div>created on KE on {getToday()} </div>\n      </div>\n\n      {KFA ? (\n        <div style={{ justifyContent: 'center', alignItems: 'center', flexDirection: 'row', marginTop: 16, marginBottom: 16, border: '1px solid black', weight: 546, height: 640 }} >\n          KFA Content\n        </div>) : (\n        <div>\n          {contents.map((content, index) => (\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexDirection: 'row', marginTop: 16, marginBottom: 16 }}>\n              <div style={{ display: 'flex', border: '1px solid black', height: 146, width: 261, justifyContent: 'center', alignItems: 'center' }}>\n                <img src={content.frame} height={146} width={261} />\n              </div>\n              {enableTranscript ? (\n                <textarea rows=\"10\" defaultValue={content.transcript} style={{ width: 261, height: 144 }}>\n                \n                </textarea>\n              ) : (\n                <textarea rows=\"10\" style={{width: 261, height: 144 }}>\n\n                </textarea>)}\n\n            </div>\n\n          ))}\n        </div>)}\n\n      <div style={{ display: 'flex', alignItems:'center', justifyContent: 'center', flexDirection: 'column', margin: 16}}>\n\n        <div> Footnote</div>\n        <textarea rows=\"7\" style={{ width: 550}}>\n          \n        </textarea>\n\n      </div>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { Editor } from './features/editor/Editor';\r\nimport { Preview } from './features/preview/Preview';\r\nimport { Export } from './features/export/Export';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'fontsource-roboto';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/' component={App}></Route>\r\n              <Route exact path='/editor' component={Editor}></Route>\r\n              <Route exact path='/preview' component={Preview}></Route>\r\n              <Route exact path='/export' component={Export}></Route>\r\n            </Switch>\r\n          </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Header } from '../../components/Header';\nimport { Button } from '../../components/Button';\nimport { Timeline } from './Timeline'\nimport YouTube from 'react-youtube';\nimport { initializeFrames, selectExtractionProgress, selectJobIsCompleted, selectYoutubeURL, getJobStatus, setKeyFrames } from '../systemSlice';\n\nexport function Editor() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const extractionProgress = useSelector(selectExtractionProgress);\n  const jobIsCompleted = useSelector(selectJobIsCompleted);\n  const youtubeURL = useSelector(selectYoutubeURL);\n  const [playerObj, setPlayerObj] = useState(null);\n  const [intervalID, setIntervalID] = useState(null);\n  const [seconds, setSeconds] = useState(800);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  // calling dispatch(getJobStatus()) every 5 seconds\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (!jobIsCompleted) {\n        dispatch(getJobStatus());\n        console.log(\"fetch new frames every 2 seconds\")\n      }\n    }\n      , 2000);\n\n      setIntervalID(intervalId);\n  }, []); //stop when job is finished \n\n  useEffect(() => {\n    clearInterval(intervalID);\n  }, [jobIsCompleted]); //stop when job is finished \n\n\n  const onReady = (e) => {\n    // console.log(e.target);\n    setPlayerObj(e.target);\n    setSeconds(e.target.getDuration());\n    setIsLoading(false);\n    dispatch(initializeFrames(e.target.getDuration()));\n    e.target.playVideo();\n  }\n\n  function onStateChange(e) {\n    // console.log(e.target.getCurrentTime());\n  }\n\n  function seekTo(second) {\n    // console.log(\"seek to: \", second);\n    playerObj.seekTo(second);\n    playerObj.pauseVideo();\n  }\n\n  function playAt(second) {\n    // console.log(\"play at: \", second);\n    playerObj.seekTo(second);\n    playerObj.playVideo();\n  }\n\n  function saveAndPreview() {\n    history.push(\"/preview\");\n  }\n\n  function resetKeyframes() {\n    dispatch(initializeFrames(seconds)) ;\n  }\n\n  return (\n    <div>\n      <Header />\n      <div style={{ display: 'flex', marginRight: 20, marginBottom: 30, justifyContent: 'flex-end' }}>\n        <Button onClick={() => resetKeyframes()} label=\"Reset Keyframes\"></Button>\n        <Button onClick={() => saveAndPreview()} label=\"Preview PDF\"></Button>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', height: '400px', marginInline: 20, position: \"relative\" }}>\n        <div>\n          <span>Instruction</span>\n          <ol>\n            <li> Add Keyframe by clicking a frame on Timeline. </li>\n            <li> Remove Keyframe by clicking (x) on it. </li>\n            <li> Click on Keyframe to view the Keyframe on Video Player </li>\n            <li> Hover on Keyframe to preview them</li>\n            <li> Double click on frame to play from it</li>\n            <li> Export when you feel good about all the Keyframes </li>\n          </ol>\n\n          <div style={{position: \"absolute\", bottom: 30}}>\n            <span>Automatic Extraction Status: {extractionProgress}% extracted</span>\n            <div style={{backgroundColor: \"#ddd\", height: 5}}>\n              <div class=\"ExtractProgressNode\" style={{ width: `${extractionProgress}%` }} />\n            </div>\n          </div>\n\n        </div>\n        <YouTube videoId={youtubeURL.split('=')[1]} opts={opts} onReady={onReady} onStateChange={onStateChange} />\n      </div>\n\n      {!isLoading ? (\n        <Timeline extractionProgress={extractionProgress} isLoading={isLoading} seconds={seconds} player={playerObj} seekTo={seekTo} playAt={playAt} />\n      ) : (\n        <></>\n      )}\n\n    </div >\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Header } from '../../components/Header';\nimport { Button } from '../../components/Button';\nimport { Card } from '../../components/Card';\nimport { PDFTemplate } from './PDFTemplate'\nimport { selectContents, processFrameScriptTuple } from '../systemSlice';\n\nexport function Preview() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const contents = useSelector(selectContents);\n  const [title, setTitle] = useState('New Note');\n  const [enableTranscript, switchEnableTranscript] = useState(true);\n  const [enableKFA, switchEnableKFA] = useState(false);\n\n  useEffect(() => {\n    dispatch(processFrameScriptTuple(4)); //reduce frame scripts duples to group of 4. \n  }, []);\n\n\n\n  function triggerPrint() {\n    document.getElementById('toPrint').style.overflow = 'unset';\n    // document.getElementById('hide').style.visibility = 'hidden';\n    document.getElementById('hide').style.display = 'none';\n    document.getElementById('hideHeader').style.display = 'none';\n    document.getElementById('hideButtons').style.display = 'none';\n\n    // var originalContents = document.getElementById('original').innerHTML;\n    // document.body.innerHTML = printContents;\n\n    document.title = title;\n    window.print();\n\n    document.getElementById('hide').style.display = 'flex';\n    document.getElementById('hideButtons').style.display = 'flex';\n    document.getElementById('hideHeader').style.display = 'flex';\n    document.getElementById('toPrint').style.overflow = 'scroll';\n  }\n\n  function finishPreview() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div id='original'>\n      <div id='hideHeader'>\n        <Header />\n      </div>\n\n      <div id='hideButtons' style={{ display: 'flex', marginRight: 20, marginBottom: 30, justifyContent: 'flex-end' }}>\n        <Button label=\"Back\" onClick={() => { history.push(\"editor\") }}></Button>\n        <Button label=\"Print as PDF\" onClick={() => triggerPrint()}></Button>\n        {/* <Button label=\"Finish\" onClick={() => finishPreview()}></Button> */}\n      </div>\n\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: \"center\" }}>\n        <div id='hide' style={{ display: 'flex', flexDirection: 'column',  alignItems: 'center', marginInline: 20 }}>\n          <Card height={'auto'} width={'auto'} flexDirection={'column'}>\n            <div>\n              <div style={{ display: 'flex', flexDirection: 'column', margin: 5 }}>\n\n                <h2>Export Options</h2>\n\n                <br />\n\n                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                  <div style={{fontWeight: \"bold\"}}>Page Title</div>\n                  <input style={{ width: 180, margin: 5 }} type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)}></input>\n                </div>\n\n                <br />\n\n                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                  <div style={{fontWeight: \"bold\"}}>Export Format</div>\n                  <div onChange={() => switchEnableTranscript(!enableTranscript)}>\n                    <div>\n                      <input type=\"radio\" id=\"ft\" name=\"ft\" value=\"ft\" checked={enableTranscript} />\n                      <label for=\"ft\">Frames and Transcript</label>\n                    </div>\n                    <div>\n                      <input type=\"radio\" id=\"fe\" name=\"fe\" value=\"fe\" checked={!enableTranscript} />\n                      <label for=\"fe\">Frames only</label>\n                    </div>\n                  </div>\n                </div>\n\n                <br />\n\n                <div style={{ display: 'flex', flex: 1 }}>\n                  <input type=\"checkbox\" id=\"KFA\" name=\"KFA\" checked={enableKFA} onChange={() => switchEnableKFA(!enableKFA)}></input>\n                  <div>Enable Key Frame Analysis</div>\n                </div>\n\n                <br />\n\n              </div>\n            </div>\n          </Card>\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginInline: 20, height: \"100%\"}}>\n          <div id=\"toPrint\" style={{ overflowY: 'scroll', height: 600, display: 'block', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', marginInline: 20, backgroundColor: \"white\" }}>\n            {enableKFA ? (<PDFTemplate title={title} KFA={true} />) : (<> </>)}\n\n            {contents ? (\n              contents.map((contents, index) =>\n                <>\n                  <PDFTemplate key={index} title={title} contents={contents} enableKFA={enableKFA} enableTranscript={enableTranscript} />\n                  <div class=\"pagebreak\"> </div>\n                </>\n              )\n            ) : <div>loading...</div>}\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import {\n//   decrement,\n//   increment,\n//   incrementByAmount,\n//   incrementAsync,\n//   selectCount,\n// } from './counterSlice';\n// import styles from './Counter.module.css';\n\nexport function Export() {\n  // const count = useSelector(selectCount);\n  // const dispatch = useDispatch();\n  // const [incrementAmount, setIncrementAmount] = useState('2');\n\n  return (\n    <div>\n      <span>Download PDF</span>\n    </div>\n  );\n}\n"],"sourceRoot":""}